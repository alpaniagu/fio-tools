kind: PersistentVolumeClaim
apiVersion: v1
metadata:
   name: fio-data-write
   annotations:
     volume.beta.kubernetes.io/storage-class: # nombre de la storageclass que se está utilizando 
spec:
   accessModes:
     - ReadWriteOnce
   resources:
     requests:
       storage: 20Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: fio-tester-write
  labels:
    purpose: fio-testing-write
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      name: fio-testing-write
  template:
    metadata:
      labels:
        app: fio-testing-write
    spec:
      containers:
      - name: fio-container
        image: wallnerryan/fiotools-aio
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: fio-data
          mountPath: /myvol
        env:
          - name: REMOTEFILES
            value: "https://gist.githubusercontent.com/wallnerryan/cb8f9946a6fb9bdc0aabd403d9550e08/raw/31308d8139718901c1b53c9dea33526cf591881d/seqwrite.fio"
          - name: JOBFILES
            value: seqwrite.fio
          - name: PLOTNAME
            value: seqwrite
      volumes:
      - name: fio-data
        persistentVolumeClaim:
          claimName: fio-data-write

---

kind: Service
apiVersion: v1
metadata:
  name: fiotools-write
  namespace: default
spec:
  ports:
    - name: http
      protocol: TCP
      port: 8001
      targetPort: 8000
  selector:
    name: fio-testing-write
  type: ClusterIP
  sessionAffinity: None
    
---

kind: Route # solo válido para OpenShift
apiVersion: route.openshift.io/v1
metadata:
  name: fiowrite
  namespace: default
  labels:
    name: fiotools-write
spec:
  host: # URL a utilizar
  to:
    kind: Service
    name: fiotools-write
    weight: 100
  port:
    targetPort: http
  wildcardPolicy: None
